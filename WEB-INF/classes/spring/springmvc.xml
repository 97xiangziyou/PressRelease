<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	
	<!-- 只要实验HanlerExceptionResolver接口就是全局异常处理器 -->
	<!-- <bean class="com.xiangziyou.ssm.exception.CusomExceptionResolver"/> -->

	<!-- 配置restURL -->
	
	<!-- 可以扫描controller、service、... 这里让扫描controller，指定controller的包 -->
	<context:component-scan base-package="com.xiangziyou.news.controller"></context:component-scan>
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法， 
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发时使用mvc:annotation-driven conversion-service="conversionService"
		validator="validator" -->
	<mvc:annotation-driven validator="validator"></mvc:annotation-driven>
	<!-- 静态资源解析 -->
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/img/" mapping="/img/**"/>
	<mvc:resources location="/include/" mapping="/include/**"/>
	<mvc:resources location="/upload/" mapping="/upload/**"/>
	<mvc:resources location="/bdupfile/" mapping="/bdupfile/**"/>
	
	
	
	<!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<property name="prefix" value="/WEB-INF/jsp/" />

		<property name="suffix" value=".jsp" />
	</bean>
<!--     配置拦截器 -->
<!--     <mvc:interceptors>
    多个拦截器按照顺序执行
    <mvc:interceptor>
    表示所有url包括子url路径
    <mvc:mapping path="/**"/>
    <bean class="com.xiangziyou.news.interceptor.LoginInterceptor"></bean>
    </mvc:interceptor>
    </mvc:interceptors> -->

	

	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验文件 在文件中配置错误信息 -->
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	<!-- 配置错误信息文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8"></property>
		<!-- 对资源文件内容的缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120"></property>
	</bean>

</beans>